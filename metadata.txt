# This file contains metadata for your plugin. Since
# version 2.0 of QGIS this is the proper way to supply
# information about a plugin. The old method of
# embedding metadata in __init__.py will
# is no longer supported since version 2.0.

# This file should be included when you package your plugin.# Mandatory items:

[general]
name=Guided Offline Editing
qgisMinimumVersion=3.10
description=Extend the built-in Offline Editing plugin providing automated processes
version=0.7.0-dev1
author=Yann Vot√©
email=ygversil@lilo.org

about=This plugin provides some simple automations to ease projects sharing across an organization. At the moment, it relies heavily on PostgreSQL and on QGIS features introduced in versions 3.6 and 3.8. How it works ? A "power user" (a GIS admin, a DBA, or the like) prepares beforehand one or more projects for working with PostgreSQL/Postgis layers. That is: she loads PostgreSQL layers in QGIS and prepares everything to work with these layers: symbology, relations, forms. She does so with as much details as possible (form widgets, field validation, field help, relationships, and so on). She also indicates which layers must be downloaded for offline edition (a variable to set in layer properties). Then these projects are saved in PostgreSQL (this is a feature introduced in QGIS 3.6). Now, on the "normal user" side, the plugin shows the list of available projects that have been prepared in this manner. The user selects one project and just clicks `Go!`. That's it! The project is loaded like it was prepared. The user can also choose to download the project for offline edition. The project is then saved into one GeoPackage file (QGIS 3.8). Later, when back online, the user just clicks `Upload` and the layers are synchronised into PostgreSQL.

tracker=https://github.com/ygversil/qgis-guided-offline-editing/issues
repository=https://github.com/ygversil/qgis-guided-offline-editing
# End of mandatory metadata

# Recommended items:

# Uncomment the following line and add your changelog:
changelog=
  Version 0.7
  * Enable or disable `Prepare` action in menu depending on current project state. This action is used to replace local layer paths with `:gisdatahome:` prefix so that these layers can be opened on any installation where the `gis_data_home` global variable is set. The `Prepare` action is enabled if current project is saved into PostgreSQL, and disabled if not,
  * Show current username so that user can see if she uses the right QGIS profile,
  ====
  Version 0.6
  * Truely allow mixing Postigs and local layers in a project saved into PostgreSQL. This comes at a cost: project must be saved using a specific action that will rewrite all local paths with a :gisdatahome: prefix,
  * Allow to configure multiple databases. Each database will have its own menu entry under the "Guided Editing" menu,
  * Improved logging and user feedback,
  * Zoom on project extent after loading,
  * Load project from PostgreSQL after synchronizing offline project (do not keep offline project open),
  * bugfix: download extent not in correct projection,
  * bugfix: remove code that was only Python 3.8 compatible,
  ====
  Version 0.5
  * Allow not to download project and directly edit in PostgreSQL/Postgis,
  * When project is downloaded offline, enforce to save it in `gis_data_home` folder, and compute filename from project name in PostgreSQL. Thus do not ask anymore user to select destination file. `gis_data_home` must be a QGIS global variable referencing a valid folder. The reason for this is to allow local filesystem layers in shared projects saved in PostgreSQL. Consequently, eash user must have the same folder tree and the same common layers inside `gis_data_home` folder,
  * Before converting offline a project, if it is already loaded in QGIS, do not load it again from PostgreSQL,
  * bugfix: error when destination GeoPackage does not exists prior to converting the project offline,
  ====
  Version 0.3 - First public release
  * Read config from QgsSettings (that is in QGIS INI file)

# Tags are comma separated with spaces allowed
tags=attribute table,attribute,attribute edit,database,digitizing,editing,feature,field,vector,layers,python,qgis,gis,offline,synchronize

homepage=https://github.com/ygversil/qgis-guided-offline-editing
category=Database
icon=icons/guided_offline_editing_copy.png
# experimental flag
experimental=True

# deprecated flag (applies to the whole plugin, not just a single version)
deprecated=False

